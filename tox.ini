# Tox configuration file
# Read more under https://tox.readthedocs.org/
# THIS SCRIPT IS SUPPOSED TO BE AN EXAMPLE. MODIFY IT ACCORDING TO YOUR NEEDS!

[tox]
minversion = 3.15
envlist = default


[testenv]
description = invoke pytest to run automated tests
isolated_build = True
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    HOME
    SETUPTOOLS_*
extras =
    testing
commands =
    pytest {posargs}



[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
allowlist_externals = mkdir
deps =
    build: build[virtualenv]
passenv =
    SETUPTOOLS_*
# nodig om te voorkomen dat python.exe vanuit C gerund wordt
setenv =
    TEMP = {toxinidir}/.tox/.tmp
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}
# By default, both `sdist` and `wheel` are built. If your sdist is too big or you don't want
# to make it available, consider running: `tox -e build -- --wheel`


[testenv:{docs,doctests,linkcheck,pdf}]
description =
    docs: Invoke sphinx-build to build the docs
    pdf: Invoke sphinx-build to build the latex pdf
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
changedir = {toxinidir}
allowlist_externals = make
passenv =
    SETUPTOOLS_*
setenv =
    DOCSDIR = docs
    BUILDDIR = docs/_build
    docs: BUILD = html
    pdf: BUILD = latex
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
    TEMP = {toxinidir}/.tox/.tmp
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}
    pdf: make -C "{env:BUILDDIR}/{env:BUILD}"


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    # See: https://twine.readthedocs.io/en/latest/
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_REPOSITORY_URL
deps = twine
setenv =
    TEMP = {toxinidir}/.tox/.tmp
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
